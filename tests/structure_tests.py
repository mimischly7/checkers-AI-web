from structure import *

def test_make_move_1():
    sample_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, -1, -1, 17, -1, 16],
        [6, -1, 7, -1, -1, -1, 18, -1],
        [-1, 8, -1, -1, -1, 20, -1, 19],
        [9, -1, 10, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    gameboard = GameBoard(sample_board)

    move = Move(7, [(4, 2), (3, 3)])

    expected_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, 7, -1, 17, -1, 16],
        [6, -1, -1, -1, -1, -1, 18, -1],
        [-1, 8, -1, -1, -1, 20, -1, 19],
        [9, -1, 10, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    actual_board = gameboard.copy_and_make_move(move).board

    assert expected_board == actual_board


def test_make_move_2():
    sample_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, -1, -1, 17, -1, 16],
        [6, -1, 7, -1, -1, -1, 18, -1],
        [-1, 8, -1, 14, -1, 20, -1, 19],
        [9, -1, 10, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    gameboard = GameBoard(sample_board)

    move = Move(10, [(6, 2), (4, 4)])

    expected_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, -1, -1, 17, -1, 16],
        [6, -1, 7, -1, 10, -1, 18, -1],
        [-1, 8, -1, -1, -1, 20, -1, 19],
        [9, -1, -1, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    actual_board = gameboard.copy_and_make_move(move).board

    assert expected_board == actual_board


def test_make_move_3():
    sample_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, -1, -1, 17, -1, 16],
        [6, -1, 7, -1, -1, -1, -1, -1],
        [-1, 8, -1, 19, -1, 20, -1, 19],
        [9, -1, 10, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    gameboard = GameBoard(sample_board)

    move = Move(7, [(4, 2), (6, 4), (4, 6)])

    expected_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, -1, -1, 17, -1, 16],
        [6, -1, -1, -1, -1, -1, 7, -1],
        [-1, 8, -1, -1, -1, -1, -1, 19],
        [9, -1, 10, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    actual_board = gameboard.copy_and_make_move(move).board

    assert expected_board == actual_board




def test_get_jumps_1():
    sample_board = [
        [0, -1, 1, -1, -1, -1, 12, -1],
        [-1, 2, -1, -1, -1, 14, -1, 13],
        [3, -1, 4, -1, -1, -1, 15, -1],
        [-1, 5, -1, -1, -1, 17, -1, 16],
        [6, -1, 7, -1, -1, -1, -1, -1],
        [-1, 8, -1, 19, -1, 20, -1, 19],
        [9, -1, 10, -1, -1, -1, 21, -1],
        [-1, 11, -1, -1, -1, 23, -1, 22]
    ]

    gameboard = GameBoard(sample_board)

    moves = gameboard._get_jumps(7)

    print([m.path for m in moves])
